{
    "docs": [
        {
            "location": "/", 
            "text": "HSR Notizen\n\n\nHerbstsemester 16\n\n\n\n\nAlgorithmen und Datenstrukturen 2\n\n\nBusiness und Recht 1\n\n\nRecht\n\n\nBusiness-Plan\n\n\n\n\n\n\nC++\n\n\nEnglish: How Things Work\n\n\nMobile and GUI Engineering\n\n\n.NET Technologien\n\n\nSoftware Engineering 1\n\n\nWeb Engineering + Design 2\n\n\n\n\nLinks\n\n\n\n\nSlack: \nhttps://hsr-students.slack.com\n\n\nMathJax Syntax\n\n\nMkDocs User-Guide\n\n\nMarkdown Cheatsheet", 
            "title": "Home"
        }, 
        {
            "location": "/#hsr-notizen", 
            "text": "", 
            "title": "HSR Notizen"
        }, 
        {
            "location": "/#herbstsemester-16", 
            "text": "Algorithmen und Datenstrukturen 2  Business und Recht 1  Recht  Business-Plan    C++  English: How Things Work  Mobile and GUI Engineering  .NET Technologien  Software Engineering 1  Web Engineering + Design 2", 
            "title": "Herbstsemester 16"
        }, 
        {
            "location": "/#links", 
            "text": "Slack:  https://hsr-students.slack.com  MathJax Syntax  MkDocs User-Guide  Markdown Cheatsheet", 
            "title": "Links"
        }, 
        {
            "location": "/hs16/ad2/", 
            "text": "Algorithmen und Datenstrukturen 2\n\n\nVorlesung 1 - Binary Search Tree\n\n\n\n\nEin Heap hat das kleinste oder gr\u00f6sste Element als Root\n\n\nEine Suche auf einem Heap w\u00fcrde mit \nO(n)\n laufen, da man nicht weiss, welches Child jeweils kleiner / gr\u00f6sser ist\n\n\nMultimaps: Pro Key sind mehrere Values erlaubt\n\n\n\n\nFolie 5\n\nVoraussetzung: Random Access, Daten m\u00fcssen sortiert sein\n\n\nFolie 6\n\n- Insert: Finden der richtigen Position: \nO(log(n))\n, Rest verschieben: \nO(n)\n\n\n\n- Remove gleich wie Insert\n\n\nFolie 7\n\n- Der Baum muss so aufgebaut sein, dass der linke Child-Knoten immer \n= Parent-Node ist\n- Externe Knoten speichern keine Daten. Wenn man beim Suchen einen Blattknoten erreicht, ist der Key nicht gefunden\n- Eine Inorder Traversierung besucht die Keys in aufsteigender Reihenfolge\n\n\nEinf\u00fcgen\n\n- Suchen nach dem einzuf\u00fcgenden Key\n- Man wird auf einen \"Sentinel\" external Node treffen\n- Dort den neuen Key einf\u00fcgen und in einen internen Knoten umwandeln\n- Bei einer \nMultimap\n kann es mehrere gleiche Keys geben. Dann:\n    - find, bis man auf den Knoten trifft\n    - nach links weiter suchen bis man auf einen external Node trifft\n    - Dort einf\u00fcgen und in internen Node umwandeln\n\n\nL\u00f6schen\n\n- Knoten hat zwei Blatt-Kinder:\n    - L\u00f6sche v und sein linkes Child, rechtes Child rutscht nach oben\n- Knoten hat ein Blatt-Kind:\n    - L\u00f6sche v und den Blatt-Knoten (links oder rechts), der andere Knoten (mit einem Key) rutscht nach oben\n- Knoten hat keine Blatt-Kinder:\n    - Finde den Knoten \nw\n, der \nv\n in der Inorder-Traversierung folgt (\"links unten des rechten Teilbaums von \nv\n\")\n    - Kopiere den Key von \nw\n zu \nV\n\n    - L\u00f6sche \nw\n mit dem gleichen Algorithmus wie bei Fall 1 und 2\n- \nF\u00fcr die ersten beiden F\u00e4lle ist der Algorithmus derselbe\n\n\nPerformance\n\n- Worst Case: Komplett unbalancierter Baum (z.B. Einf\u00fcgen mit \nsortiertem\n Input). H\u00f6he ist \nO(n)\n. Dann ist es eine Linked-List\n- Best Case: Mit der Mitte beginnen, komplett Balanciert. H\u00f6he \nlog(n)\n\n- Balanciert sich nicht selbst (wie andere B\u00e4ume, s. sp\u00e4ter)", 
            "title": "AD2"
        }, 
        {
            "location": "/hs16/ad2/#algorithmen-und-datenstrukturen-2", 
            "text": "", 
            "title": "Algorithmen und Datenstrukturen 2"
        }, 
        {
            "location": "/hs16/ad2/#vorlesung-1-binary-search-tree", 
            "text": "Ein Heap hat das kleinste oder gr\u00f6sste Element als Root  Eine Suche auf einem Heap w\u00fcrde mit  O(n)  laufen, da man nicht weiss, welches Child jeweils kleiner / gr\u00f6sser ist  Multimaps: Pro Key sind mehrere Values erlaubt   Folie 5 \nVoraussetzung: Random Access, Daten m\u00fcssen sortiert sein  Folie 6 \n- Insert: Finden der richtigen Position:  O(log(n)) , Rest verschieben:  O(n)  \n- Remove gleich wie Insert  Folie 7 \n- Der Baum muss so aufgebaut sein, dass der linke Child-Knoten immer  = Parent-Node ist\n- Externe Knoten speichern keine Daten. Wenn man beim Suchen einen Blattknoten erreicht, ist der Key nicht gefunden\n- Eine Inorder Traversierung besucht die Keys in aufsteigender Reihenfolge  Einf\u00fcgen \n- Suchen nach dem einzuf\u00fcgenden Key\n- Man wird auf einen \"Sentinel\" external Node treffen\n- Dort den neuen Key einf\u00fcgen und in einen internen Knoten umwandeln\n- Bei einer  Multimap  kann es mehrere gleiche Keys geben. Dann:\n    - find, bis man auf den Knoten trifft\n    - nach links weiter suchen bis man auf einen external Node trifft\n    - Dort einf\u00fcgen und in internen Node umwandeln  L\u00f6schen \n- Knoten hat zwei Blatt-Kinder:\n    - L\u00f6sche v und sein linkes Child, rechtes Child rutscht nach oben\n- Knoten hat ein Blatt-Kind:\n    - L\u00f6sche v und den Blatt-Knoten (links oder rechts), der andere Knoten (mit einem Key) rutscht nach oben\n- Knoten hat keine Blatt-Kinder:\n    - Finde den Knoten  w , der  v  in der Inorder-Traversierung folgt (\"links unten des rechten Teilbaums von  v \")\n    - Kopiere den Key von  w  zu  V \n    - L\u00f6sche  w  mit dem gleichen Algorithmus wie bei Fall 1 und 2\n-  F\u00fcr die ersten beiden F\u00e4lle ist der Algorithmus derselbe  Performance \n- Worst Case: Komplett unbalancierter Baum (z.B. Einf\u00fcgen mit  sortiertem  Input). H\u00f6he ist  O(n) . Dann ist es eine Linked-List\n- Best Case: Mit der Mitte beginnen, komplett Balanciert. H\u00f6he  log(n) \n- Balanciert sich nicht selbst (wie andere B\u00e4ume, s. sp\u00e4ter)", 
            "title": "Vorlesung 1 - Binary Search Tree"
        }, 
        {
            "location": "/hs16/reing/", 
            "text": "Recht\n\n\nVorlesung 1 - Vertragsrecht\n\n\n\n\n\u00d6ffentliches Recht: Vom Staat aus, Staat handelt hoheitlich\n\n\nBundesstaatsrecht, Verwaltungsrecht, Strafrecht, etc.\n\n\n\n\n\n\nPrivatrecht: Zwei private (sind gleichgestellt)\n\n\nZGB, OR\n\n\n\n\n\n\n\n\nSchuldverh\u00e4ltnis\n\n\n\n\nObligation = Schuldverh\u00e4ltnis\n\n\nWichtigste Grunds\u00e4tze basieren auf r\u00f6mischem Recht\n\n\nMind. 1 Person muss etwas leisten, mind. 1 Person darf etwas fordern\n\n\nEntstehungsgr\u00fcnde\n\n\nGesetz\n\n\nunerlaubte Handlung (OR 41, 58)\n\n\nungerechtfertigte Bereicherung (62 II, 63 I OR), z.B. Fehl\u00fcberweisung\n\n\n\n\n\n\nRechtsgesch\u00e4ft\n\n\nSchuldverh\u00e4ltnis aufgrund einer (privaten) Willens\u00e4usserung\n\n\nEinseitiges Rechtsgesch\u00e4ft: Willens\u00e4usserung einer Person (z.B. Testament)\n\n\nzwei- oder mehrseitige Rechtsgesch\u00e4fte, Wissens\u00e4usserung mehrerer Personen, z.B. \nVertr\u00e4ge\n\n\n\n\n\n\n\n\n\n\nWillens\u00e4usserung\n\n\nJe nach Art ist die \u00c4usserung unterschiedlich lang g\u00fcltig\n\n\nausdr\u00fccklich / stillschweigend (konkludente)\n\n\nunmittelbare / mittelbare: Direkter Dialog beider Parteien. Mittelbar: E-mail oder Brief (l\u00e4nger g\u00fcltig)\n\n\nempfangsbed\u00fcrftige / nicht empfangsbed\u00fcrftige\n\n\n\n\n\n\n\n\nVertragsschluss\n\n\n\n\nEs braucht gegenseitige Willens\u00e4usserung (Antrag -\n Annahme)\n\n\nAntrag kann mit oder ohne Annahmefrist gestellt werden\n\n\nohne Annahmefrist: Unterscheidung unter A\nn\nwesenden oder unter A\nb\nwesenden\n\n\n\n\n\n\nFolie 16\n\n\nBefristeter Antrag (Zeitzone des Antragstellers)\n\n\nAntrag unter Anwesenden (\"Haust\u00fcrgesch\u00e4ft\" kann widerrufen werden innert 7 Tagen)\n\n\nAntrag unter Abwesenden (ca 5 Tage Frist)\n\n\nBei niedrigem Wert darf das Buch behalten werden (\"Die unbestelle Zustellung einer Sache stellt \nkein Antrag\n dar\")\n\n\n\n\n\n\nVoraussetzungen\n\n\nhandlungsf\u00e4hige Personen (ZGB 12) (m\u00fcndig und handlungsf\u00e4hig)\n\n\n\u00fcbereinstimmende Willens\u00e4usserung (Antrag / Annahme)\n\n\nEinigung \u00fcber wesentliche Punkte\n\n\n\n\n\n\nEinseitige Vertr\u00e4ge: z.B. Schenkung\n\n\nzweiseitige Vertr\u00e4ge: Beiden Parteien haben Leitsungspflicht\n\n\nvolkommen zweiseitig: Miete, Kauf\n\n\nunvolkommen zweiseitig: z.B. unentgeltlicher Auftrag, eine Leistung wird h\u00f6her gewichtet als die andere\n\n\n\n\n\n\nNomninatvertr\u00e4ge: Im Gesetzt (OR) geregelt, z.B. Kauf\n\n\nInnominatvertr\u00e4ge: gesetzlich nicht geregelt, z.B. Leasing\n\n\nBeispiele \nFolie 21\n\n\nMiete: \nNominatvertrag\n (viele zwingende Bestimmunge zum Schutz des Mieters)\n\n\nWerkvertrag: \nNominatertrag\n (Im Unterschied zum Kaufvertrag exisitert das Produkt bei Vertragsabschluss noch nicht, Erstellung eines Werkes)\n\n\nFranchising: \nInnominatvertrag\n\n\nFactoring: \nInnominatvertrag\n (Zahlungsschuld/Inkasso verkaufen an einen Factor)\n\n\nArbeitsvertrag: \nNominatvertrag\n\n\nSponsoring: \nInnominatvertrag\n\n\n\n\n\n\nVertragsfreiheit\n\n\nDie Form und der Inhalt ist frei w\u00e4hlbar\n\n\nEr kann nachtr\u00e4glich ver\u00e4ndert oder aufgehoben werden (beidseitig)\n\n\n\n\n\n\nSchranken der Vertragsfreiheit\n\n\nWiderrechtlichkeit: Verstoss gegen zwingendes Gesetz\n\n\n\u00f6ffentliche Ordnung\n\n\nSittenwidrigkeit\n\n\nVerstoss gegen Pers\u00f6nlichkeitsrecht\n\n\nUnm\u00f6glichkeit (z.B. Grundst\u00fcck auf dem Mond)\n\n\n-\n Folge: Vertrag ist nichtig\n\n\nBeispiele \nFolie 24\n\n\nWiderrechtlich\n\n\nWenn zwischen H und Z bereits ein Kaufvertrag besteht -\n Doppelverkauf. H muss zweites Abendkleid oder Schadenersatz leisten\n\n\nNichtig, Verstoss gegen Pers\u00f6nlichkeitsrecht\n\n\nNichtig. Kann gegen Pers\u00f6nlichkeitsrecht verstossen, wegem langer Vertragslaufzeit (ab 20 Jahre nach BG)", 
            "title": "ReIng"
        }, 
        {
            "location": "/hs16/reing/#recht", 
            "text": "", 
            "title": "Recht"
        }, 
        {
            "location": "/hs16/reing/#vorlesung-1-vertragsrecht", 
            "text": "\u00d6ffentliches Recht: Vom Staat aus, Staat handelt hoheitlich  Bundesstaatsrecht, Verwaltungsrecht, Strafrecht, etc.    Privatrecht: Zwei private (sind gleichgestellt)  ZGB, OR", 
            "title": "Vorlesung 1 - Vertragsrecht"
        }, 
        {
            "location": "/hs16/reing/#schuldverhaltnis", 
            "text": "Obligation = Schuldverh\u00e4ltnis  Wichtigste Grunds\u00e4tze basieren auf r\u00f6mischem Recht  Mind. 1 Person muss etwas leisten, mind. 1 Person darf etwas fordern  Entstehungsgr\u00fcnde  Gesetz  unerlaubte Handlung (OR 41, 58)  ungerechtfertigte Bereicherung (62 II, 63 I OR), z.B. Fehl\u00fcberweisung    Rechtsgesch\u00e4ft  Schuldverh\u00e4ltnis aufgrund einer (privaten) Willens\u00e4usserung  Einseitiges Rechtsgesch\u00e4ft: Willens\u00e4usserung einer Person (z.B. Testament)  zwei- oder mehrseitige Rechtsgesch\u00e4fte, Wissens\u00e4usserung mehrerer Personen, z.B.  Vertr\u00e4ge      Willens\u00e4usserung  Je nach Art ist die \u00c4usserung unterschiedlich lang g\u00fcltig  ausdr\u00fccklich / stillschweigend (konkludente)  unmittelbare / mittelbare: Direkter Dialog beider Parteien. Mittelbar: E-mail oder Brief (l\u00e4nger g\u00fcltig)  empfangsbed\u00fcrftige / nicht empfangsbed\u00fcrftige", 
            "title": "Schuldverh\u00e4ltnis"
        }, 
        {
            "location": "/hs16/reing/#vertragsschluss", 
            "text": "Es braucht gegenseitige Willens\u00e4usserung (Antrag -  Annahme)  Antrag kann mit oder ohne Annahmefrist gestellt werden  ohne Annahmefrist: Unterscheidung unter A n wesenden oder unter A b wesenden    Folie 16  Befristeter Antrag (Zeitzone des Antragstellers)  Antrag unter Anwesenden (\"Haust\u00fcrgesch\u00e4ft\" kann widerrufen werden innert 7 Tagen)  Antrag unter Abwesenden (ca 5 Tage Frist)  Bei niedrigem Wert darf das Buch behalten werden (\"Die unbestelle Zustellung einer Sache stellt  kein Antrag  dar\")    Voraussetzungen  handlungsf\u00e4hige Personen (ZGB 12) (m\u00fcndig und handlungsf\u00e4hig)  \u00fcbereinstimmende Willens\u00e4usserung (Antrag / Annahme)  Einigung \u00fcber wesentliche Punkte    Einseitige Vertr\u00e4ge: z.B. Schenkung  zweiseitige Vertr\u00e4ge: Beiden Parteien haben Leitsungspflicht  volkommen zweiseitig: Miete, Kauf  unvolkommen zweiseitig: z.B. unentgeltlicher Auftrag, eine Leistung wird h\u00f6her gewichtet als die andere    Nomninatvertr\u00e4ge: Im Gesetzt (OR) geregelt, z.B. Kauf  Innominatvertr\u00e4ge: gesetzlich nicht geregelt, z.B. Leasing  Beispiele  Folie 21  Miete:  Nominatvertrag  (viele zwingende Bestimmunge zum Schutz des Mieters)  Werkvertrag:  Nominatertrag  (Im Unterschied zum Kaufvertrag exisitert das Produkt bei Vertragsabschluss noch nicht, Erstellung eines Werkes)  Franchising:  Innominatvertrag  Factoring:  Innominatvertrag  (Zahlungsschuld/Inkasso verkaufen an einen Factor)  Arbeitsvertrag:  Nominatvertrag  Sponsoring:  Innominatvertrag    Vertragsfreiheit  Die Form und der Inhalt ist frei w\u00e4hlbar  Er kann nachtr\u00e4glich ver\u00e4ndert oder aufgehoben werden (beidseitig)    Schranken der Vertragsfreiheit  Widerrechtlichkeit: Verstoss gegen zwingendes Gesetz  \u00f6ffentliche Ordnung  Sittenwidrigkeit  Verstoss gegen Pers\u00f6nlichkeitsrecht  Unm\u00f6glichkeit (z.B. Grundst\u00fcck auf dem Mond)  -  Folge: Vertrag ist nichtig  Beispiele  Folie 24  Widerrechtlich  Wenn zwischen H und Z bereits ein Kaufvertrag besteht -  Doppelverkauf. H muss zweites Abendkleid oder Schadenersatz leisten  Nichtig, Verstoss gegen Pers\u00f6nlichkeitsrecht  Nichtig. Kann gegen Pers\u00f6nlichkeitsrecht verstossen, wegem langer Vertragslaufzeit (ab 20 Jahre nach BG)", 
            "title": "Vertragsschluss"
        }, 
        {
            "location": "/hs16/bupl/", 
            "text": "Business Plan\n\n\nModularbeit\n\n\n\n\nAbgabe Mittwoch, 21. Dez\n\n\nAufbau aus 1. Vorlesung Folie 10 \u00fcbernehmen\n\n\nca. 20 Seiten\n\n\nEigenst\u00e4ndigkeitserkl\u00e4rung\n\n\nGebunden\n\n\nKurzbeschreibung auf Deckblatt\n\n\n\n\nGesch\u00e4ftsidee\n\n\n\n\nMarktorientierte Definition: Was ist der Kundennutze?\n\n\nMarket Pull: Es gibt einen markt daf\u00fcr (ungel\u00f6stes Problem), das man l\u00f6sen m\u00f6chte\n\n\nTechnology Push: Neue Technologien bringen neue Dienstleistungen, der Markt muss sich zuerst entwickeln\n\n\n\"Copycat\" Z.b. auch Ideen, die in Japan/USA schon funktionieren, aber noch nicht hier sind\n\n\n\n\nElevator Pitch\n\n\n\n\nWhat is your product?\n\n\nWho is your market?\n\n\nWhat is your revenue model? (How do you expect to make money?)\n\n\nWho is behind the company?\n\n\nWho is your competition?\n\n\nWhat is your competitive advantage?\n\n\n\n\nBusiness Modell", 
            "title": "BuPl"
        }, 
        {
            "location": "/hs16/bupl/#business-plan", 
            "text": "", 
            "title": "Business Plan"
        }, 
        {
            "location": "/hs16/bupl/#modularbeit", 
            "text": "Abgabe Mittwoch, 21. Dez  Aufbau aus 1. Vorlesung Folie 10 \u00fcbernehmen  ca. 20 Seiten  Eigenst\u00e4ndigkeitserkl\u00e4rung  Gebunden  Kurzbeschreibung auf Deckblatt", 
            "title": "Modularbeit"
        }, 
        {
            "location": "/hs16/bupl/#geschaftsidee", 
            "text": "Marktorientierte Definition: Was ist der Kundennutze?  Market Pull: Es gibt einen markt daf\u00fcr (ungel\u00f6stes Problem), das man l\u00f6sen m\u00f6chte  Technology Push: Neue Technologien bringen neue Dienstleistungen, der Markt muss sich zuerst entwickeln  \"Copycat\" Z.b. auch Ideen, die in Japan/USA schon funktionieren, aber noch nicht hier sind", 
            "title": "Gesch\u00e4ftsidee"
        }, 
        {
            "location": "/hs16/bupl/#elevator-pitch", 
            "text": "What is your product?  Who is your market?  What is your revenue model? (How do you expect to make money?)  Who is behind the company?  Who is your competition?  What is your competitive advantage?", 
            "title": "Elevator Pitch"
        }, 
        {
            "location": "/hs16/bupl/#business-modell", 
            "text": "", 
            "title": "Business Modell"
        }, 
        {
            "location": "/hs16/cpi/", 
            "text": "C++\n\n\nWiki: https://wiki.ifs.hsr.ch/CPlusPlus/wiki.cgi?CPlusPlus\nC++ Referenz: http://en.cppreference.com/w/cpp\n\n\nVorlesung 1\n\n\n\n\n\"Undefined Behaviour\": Verhalten nicht definiert, wenn z.B. Divison durch 0 oder Segmentation fault (\"Es kann alles passieren\"). Schlimmster Fall: Es l\u00e4uft!\n\n\nHelloWorld:\n\n\n#include\n: Pr\u00e4prozessor Anweisung\n\n\nusing namespace std;\n: Kann alle Namen ohne \nstd::\n benutzen. Man kann dann nicht sagen, aus welchem Namespace eine Anweisung kommt, oder ob es eine Variable oder Funktion etc. ist\n\n\n: Links Shift, ist Teil der Bibliothek (Operator Overloading). Quasi Funktionsaufruf mit string-literal als Argument\n\n\ncout\n: Ein Stream von \nstd\n\n\nendl\n ist eine Funktion, flusht den Stream\n\n\n\n\n\n\nCompilation\n\n\nIm Header (z.B. \niostream\n) stehen die Definitionen (z.B. dass es \ncout\n gibt)\n\n\nDer Linker linkt die standard library (dort ist \ncout\n implementiert)\n\n\n\n\n\n\nStrings z.B. werden im Unterschied zu Java direkt auf dem Stack abgelegt\n\n\nKlassen: \nstruct\n heisst public, \nclass\n privat\n\n\nEin private bzw. public block mit \npublic:\n, \nprivate:\n bezeichnen, alles ab dort hat dann den Scope\n\n\nNach Klassendefinition ein \n;\n: \nsruct Hello {...};", 
            "title": "C++"
        }, 
        {
            "location": "/hs16/cpi/#c", 
            "text": "Wiki: https://wiki.ifs.hsr.ch/CPlusPlus/wiki.cgi?CPlusPlus\nC++ Referenz: http://en.cppreference.com/w/cpp", 
            "title": "C++"
        }, 
        {
            "location": "/hs16/cpi/#vorlesung-1", 
            "text": "\"Undefined Behaviour\": Verhalten nicht definiert, wenn z.B. Divison durch 0 oder Segmentation fault (\"Es kann alles passieren\"). Schlimmster Fall: Es l\u00e4uft!  HelloWorld:  #include : Pr\u00e4prozessor Anweisung  using namespace std; : Kann alle Namen ohne  std::  benutzen. Man kann dann nicht sagen, aus welchem Namespace eine Anweisung kommt, oder ob es eine Variable oder Funktion etc. ist  : Links Shift, ist Teil der Bibliothek (Operator Overloading). Quasi Funktionsaufruf mit string-literal als Argument  cout : Ein Stream von  std  endl  ist eine Funktion, flusht den Stream    Compilation  Im Header (z.B.  iostream ) stehen die Definitionen (z.B. dass es  cout  gibt)  Der Linker linkt die standard library (dort ist  cout  implementiert)    Strings z.B. werden im Unterschied zu Java direkt auf dem Stack abgelegt  Klassen:  struct  heisst public,  class  privat  Ein private bzw. public block mit  public: ,  private:  bezeichnen, alles ab dort hat dann den Scope  Nach Klassendefinition ein  ; :  sruct Hello {...};", 
            "title": "Vorlesung 1"
        }, 
        {
            "location": "/hs16/englhtw/", 
            "text": "English: How Things Work", 
            "title": "EnglHTw"
        }, 
        {
            "location": "/hs16/englhtw/#english-how-things-work", 
            "text": "", 
            "title": "English: How Things Work"
        }, 
        {
            "location": "/hs16/mge/", 
            "text": "Mobile and GUI Engineering\n\n\nPr\u00fcfung\n\n\n\n\nPro Teil 1h\n\n\nPro Teil 10 A4-Seiten Zusammenfassung\n\n\n\n\nVorlesung 1 - Einf\u00fchrung Android\n\n\n\n\n\n\nMiniprojekt Abgabe Woche 7 und Woche 14\n\n\n\n\n\n\nAndroid Basics\n\n\n\n\nJava 7 auf Android\n\n\nActivities sind ~\"Screens\"\n\n\nApps werden automatisch geschlossen\n\n\nAllgemein wird der Lifecylce stark vom System gesteuert\n\n\nEine Activity sollte eine einzelne Aufgabe realisieren\n\n\nActivity kann sich in verschiedenen Zust\u00e4nden befinden: Wird gestartet, ist aktiv, wird in den Hintergrund gehen, etc.\n\n\nDie einzelnen Methoden werden \u00fcberschrieben (z.B. \nonCreate()\n)\n\n\nStart einer Activity: \nonCreate()\n, \nonStart()\n, \nonResume()\n, erst dann ist sie interagierbar\n\n\nWird eine Activity \u00fcberdeckt, wird sie pausiert \nonPause()\n. Kommt sie wieder in den Vordergrund, wird nur \nonResume()\n aufgerufen\n\n\nonDestroy()\n k\u00f6nnte auch direkt anderen Zust\u00e4nden aufgerufen werden!\n\n\nBei Konfigurations\u00e4nderungen wird die Activity neu gestartet (zerst\u00f6rt und neu aufgebaut). Also auch z.B. beim Drehen des Screens!\n\n\nDaten in \nonPause()\n sichern\n\n\nActivities werden in einem Stack verwaltet (muss nicht von gleicher App sein)\n\n\nDer Back-Button poped normalerweise die oberste Activity auf dem Stack\n\n\nEine Gruppe von Activities (= Activity Stack) heissen \"Task\"\n\n\nEine ge\u00f6ffnete App ist ein Task, bzw. ist ein Eintrag im \"Overview Screen\" ein Task\n\n\n\n\n\n\nSystemsicht\n\n\nPro APK wird ein Prozess mit einem Thread gestartet\n\n\nJede APK wird unter eigenem Linux User installiert\n\n\nAPKs sind quasi JARs (= Zip-Files) \n\n\n\n\n\n\nIntents\n\n\nAlle Intents werden \u00fcber das System verwaltet\n\n\nExpliziter Intent: Eine bestimmte Klasse ansprechen\n\n\nImpliziter Intent: z.B. \"Absicht, Bild aufzunehmen\"\n\n\nExplizite Intents normalerweise f\u00fcr interne Activities, implizite f\u00fcr generische Aktionen\n\n\n\n\n\n\nViews\n\n\nAlles, was der Benutzer sieht\n\n\nJede Activity hat eine View\n\n\nGUI kann deklarativ mit XMl oder imperativ mit Java Code erstellt werden", 
            "title": "MGE"
        }, 
        {
            "location": "/hs16/mge/#mobile-and-gui-engineering", 
            "text": "", 
            "title": "Mobile and GUI Engineering"
        }, 
        {
            "location": "/hs16/mge/#prufung", 
            "text": "Pro Teil 1h  Pro Teil 10 A4-Seiten Zusammenfassung", 
            "title": "Pr\u00fcfung"
        }, 
        {
            "location": "/hs16/mge/#vorlesung-1-einfuhrung-android", 
            "text": "Miniprojekt Abgabe Woche 7 und Woche 14    Android Basics   Java 7 auf Android  Activities sind ~\"Screens\"  Apps werden automatisch geschlossen  Allgemein wird der Lifecylce stark vom System gesteuert  Eine Activity sollte eine einzelne Aufgabe realisieren  Activity kann sich in verschiedenen Zust\u00e4nden befinden: Wird gestartet, ist aktiv, wird in den Hintergrund gehen, etc.  Die einzelnen Methoden werden \u00fcberschrieben (z.B.  onCreate() )  Start einer Activity:  onCreate() ,  onStart() ,  onResume() , erst dann ist sie interagierbar  Wird eine Activity \u00fcberdeckt, wird sie pausiert  onPause() . Kommt sie wieder in den Vordergrund, wird nur  onResume()  aufgerufen  onDestroy()  k\u00f6nnte auch direkt anderen Zust\u00e4nden aufgerufen werden!  Bei Konfigurations\u00e4nderungen wird die Activity neu gestartet (zerst\u00f6rt und neu aufgebaut). Also auch z.B. beim Drehen des Screens!  Daten in  onPause()  sichern  Activities werden in einem Stack verwaltet (muss nicht von gleicher App sein)  Der Back-Button poped normalerweise die oberste Activity auf dem Stack  Eine Gruppe von Activities (= Activity Stack) heissen \"Task\"  Eine ge\u00f6ffnete App ist ein Task, bzw. ist ein Eintrag im \"Overview Screen\" ein Task    Systemsicht  Pro APK wird ein Prozess mit einem Thread gestartet  Jede APK wird unter eigenem Linux User installiert  APKs sind quasi JARs (= Zip-Files)     Intents  Alle Intents werden \u00fcber das System verwaltet  Expliziter Intent: Eine bestimmte Klasse ansprechen  Impliziter Intent: z.B. \"Absicht, Bild aufzunehmen\"  Explizite Intents normalerweise f\u00fcr interne Activities, implizite f\u00fcr generische Aktionen    Views  Alles, was der Benutzer sieht  Jede Activity hat eine View  GUI kann deklarativ mit XMl oder imperativ mit Java Code erstellt werden", 
            "title": "Vorlesung 1 - Einf\u00fchrung Android"
        }, 
        {
            "location": "/hs16/mste/", 
            "text": ".NET Technologien\n\n\nPr\u00fcfung\n\n\n\n\nVoraussetzung: Miniprojekt abschliessen\n\n\n120 Min, alle Unterlagen (ausser Musterpr\u00fcfungen)\n\n\n\n\nVorlesung 1 - .NET Grundlagen\n\n\n\n\n.NET-Framework\n\n\nTypen sind im Laufzeitsystem (CLR) nicht wie im Java\n\n\nEine Class Library f\u00fcr alle .NET-Sprachen\n\n\nCompiler erstellen Assemly IL (Intermediate Language) Code, auf der CLR wird er mit einem JIT-Compiler in nativen Code generiert\n\n\nIL l\u00e4uft auf virtueller Stack-Maschine (ohne Register)\n\n\nJIT-Compiler kompiliert erst auf Zielsystem (Platform-Abh\u00e4ngig)\n\n\nJIT\n\n\nEs wird nur der Code \u00fcbersetzt, der ben\u00f6tigt wird, also z.B. beim erstem Methodenaufruf\n\n\nAssembly\n\n\nBlack Box mit definierten Schnittstellen\n\n\nIm Manifest ist metadata\n\n\nEs gibt darin Resourcen und Module\n\n\nPrivate Assembly: Wird direkt \u00fcber Pfad referenziert\n\n\nShared Assembly: Sind im Global Assembly Cache, stehen allen Applikationen zur Verf\u00fcgung", 
            "title": "MsTe"
        }, 
        {
            "location": "/hs16/mste/#net-technologien", 
            "text": "", 
            "title": ".NET Technologien"
        }, 
        {
            "location": "/hs16/mste/#prufung", 
            "text": "Voraussetzung: Miniprojekt abschliessen  120 Min, alle Unterlagen (ausser Musterpr\u00fcfungen)", 
            "title": "Pr\u00fcfung"
        }, 
        {
            "location": "/hs16/mste/#vorlesung-1-net-grundlagen", 
            "text": ".NET-Framework  Typen sind im Laufzeitsystem (CLR) nicht wie im Java  Eine Class Library f\u00fcr alle .NET-Sprachen  Compiler erstellen Assemly IL (Intermediate Language) Code, auf der CLR wird er mit einem JIT-Compiler in nativen Code generiert  IL l\u00e4uft auf virtueller Stack-Maschine (ohne Register)  JIT-Compiler kompiliert erst auf Zielsystem (Platform-Abh\u00e4ngig)  JIT  Es wird nur der Code \u00fcbersetzt, der ben\u00f6tigt wird, also z.B. beim erstem Methodenaufruf  Assembly  Black Box mit definierten Schnittstellen  Im Manifest ist metadata  Es gibt darin Resourcen und Module  Private Assembly: Wird direkt \u00fcber Pfad referenziert  Shared Assembly: Sind im Global Assembly Cache, stehen allen Applikationen zur Verf\u00fcgung", 
            "title": "Vorlesung 1 - .NET Grundlagen"
        }, 
        {
            "location": "/hs16/se1/", 
            "text": "Software Engineering 1\n\n\nAllgemein\n\n\n\n\nPr\u00fcfung closed book\n\n\nAbgabe von 3 von 4 Testat-\u00dcbungen\n\n\nSelbststudium: Jede Woche in Buch lesen, nach Lektionsplan sheet\n\n\n\n\nVorlesung 1\n\n\n\n\nCa. 70% aller IT-Projekte laufen schief\n\n\nErwartungskonflikt Kunde - Programmierer, ...\n\n\nOOA nach Larman: Statisches Domain Model ohne Funktionen, Black-Box Sequenzdiagramm\n\n\n\"Klassisch\": Statisches Model mit Funktionen, White-Box Sequzendiagrammsa", 
            "title": "SE1"
        }, 
        {
            "location": "/hs16/se1/#software-engineering-1", 
            "text": "", 
            "title": "Software Engineering 1"
        }, 
        {
            "location": "/hs16/se1/#allgemein", 
            "text": "Pr\u00fcfung closed book  Abgabe von 3 von 4 Testat-\u00dcbungen  Selbststudium: Jede Woche in Buch lesen, nach Lektionsplan sheet", 
            "title": "Allgemein"
        }, 
        {
            "location": "/hs16/se1/#vorlesung-1", 
            "text": "Ca. 70% aller IT-Projekte laufen schief  Erwartungskonflikt Kunde - Programmierer, ...  OOA nach Larman: Statisches Domain Model ohne Funktionen, Black-Box Sequenzdiagramm  \"Klassisch\": Statisches Model mit Funktionen, White-Box Sequzendiagrammsa", 
            "title": "Vorlesung 1"
        }, 
        {
            "location": "/hs16/wed2/", 
            "text": "Web Engineering + Design 2\n\n\nPr\u00fcfung\n\n\n\n\n2h, closed book\n\n\nZusammenfassung 1 A4 Seite (muss abgegeben werden)", 
            "title": "WED2"
        }, 
        {
            "location": "/hs16/wed2/#web-engineering-design-2", 
            "text": "", 
            "title": "Web Engineering + Design 2"
        }, 
        {
            "location": "/hs16/wed2/#prufung", 
            "text": "2h, closed book  Zusammenfassung 1 A4 Seite (muss abgegeben werden)", 
            "title": "Pr\u00fcfung"
        }, 
        {
            "location": "/playground/", 
            "text": "Markdown Playground\n\n\nDies ist etwas normaler Text mit etwas \nkursiver\n schrift und etwas \nbold\n schrift\n\n\n\n\nDies ist Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text\nzweite Zeile\n\n\n\n\n  public class TestClass() {\n    int var = 1;\n    public method() {\n      return var;\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\n\n\n1\n\n\netwas\n\n\nanderes\n\n\n\n\n\n\n2\n\n\nals\n\n\nhier\n\n\n\n\n\n\n\n\n\n\nNotiz\n\n\nTest Notiz mit etwas Text drin\n\n\n\n\n\n\nDanger\n\n\nGefahr!\n\n\n\n\n\n\nWarning\n\n\nWarnung!\n\n\n\n\nInline Math: \n x_i^2 * \\frac{(n^2 * n) - 1}{\\Omega} \n\n\n\n\nDisplay Math:\n\n\\sum_{i=0}^n i^2\n\n\n\n\nGruppen mit \n{}\n: \n{10}^5\n\n\n\n\n\n\nA \\rightarrow B \n\n\n\\lim_{x\\to \\infty} \\sin x", 
            "title": "Playground"
        }, 
        {
            "location": "/playground/#markdown-playground", 
            "text": "Dies ist etwas normaler Text mit etwas  kursiver  schrift und etwas  bold  schrift   Dies ist Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text ein Text\nzweite Zeile    public class TestClass() {\n    int var = 1;\n    public method() {\n      return var;\n    }\n  }     1  2  3      1  etwas  anderes    2  als  hier      Notiz  Test Notiz mit etwas Text drin    Danger  Gefahr!    Warning  Warnung!   Inline Math:   x_i^2 * \\frac{(n^2 * n) - 1}{\\Omega}    Display Math: \\sum_{i=0}^n i^2   Gruppen mit  {} :  {10}^5    A \\rightarrow B   \\lim_{x\\to \\infty} \\sin x", 
            "title": "Markdown Playground"
        }
    ]
}